import { useState, useRef, useEffect, FocusEventHandler } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import s from "@/styles/Home.module.scss";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
import toast, { Toaster } from "react-hot-toast";

//üí¨ Bootstrap //
import "bootstrap/dist/css/bootstrap.min.css";
import { Container, Row, Col } from "react-bootstrap";

//üí¨ Img //
import CarouselImg from "../../public/images/corousel/CarouselImg.png";
import BoschImg from "../../public/images/bosch.png";
import TekaImg from "../../public/images/Teka.png";
import FrankeImg from "../../public/images/Franke.png";
import FabinoImg from "../../public/images/Fabiano.png";
// üí¨ Components //
import ProductCard from "@/components/cards/product";
import productsList from "@/data/products/products.json";
import Pagination from "../components/pagination";
import Link from "next/link";
import SimpleAccordion from "../components/accordion";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [products, setProducts] = useState(Object.values(productsList));
  const [currentPage, setCurrentPage] = useState(1);

  // üí¨ Accordion //
  const newAccordionTitle =
    "Lorem ipsum dolor sit amet consectetur. Sed amet viverra cras?";
  const newAccordionText =
    "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Facil";

  // üí¨ Call Form //
  const notify = () => {
    const { name, phone, comment } = formData;
    toast(`‚úî–Ü–º‚Äô—è: ${name}
    ‚úî–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${phone}
    ‚úî–ö–æ–º–µ–Ω—Ç–∞—Ä: ${comment}`);
  };
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    comment: "",
  });
  const handleChange = (e: { target: { name: any; value: any } }) => {
    const { name, value } = e.target;
    setFormData((prevFormData) => ({
      ...prevFormData,
      [name]: value,
    }));
  };

  // Scroll Search //
  const inputRef = useRef<HTMLInputElement>(null);

  const focus: FocusEventHandler<HTMLInputElement> = () => {
    if (inputRef.current) {
      inputRef.current.focus();
    }
  };
  // üí¨ Pproducer_line //
  const Bosch = "https://www.bosch.ua/";
  const Teka = "https://www.teka.com/uk-ua/";
  const Franke = "https://www.franke.com/ua/uk/home.html";
  const Fabino = "https://www.fabino.net/shop/";
  //
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container className={s.swiper__contsiner}>
          <Swiper
            autoplay={{ delay: 3000 }}
            spaceBetween={50}
            slidesPerView={1}
            onSwiper={(swiper) => console.log(swiper)}
          >
            <SwiperSlide>
              <Image
                src={CarouselImg}
                width={1440}
                height={553}
                alt="courosel"
              ></Image>
            </SwiperSlide>
            <SwiperSlide>
              <Image
                src={CarouselImg}
                width={1440}
                height={553}
                alt="courosel"
              ></Image>
            </SwiperSlide>
            <SwiperSlide>
              <Image
                src={CarouselImg}
                width={1440}
                height={553}
                alt="courosel"
              ></Image>
            </SwiperSlide>
          </Swiper>
        </Container>

        <Container>
          <Row>
            <Col xs={12} md={8} lg={6} className="mx-auto">
              <div className={s.search__block}>
                <p className={s.p}>Lorem ipsum dolor sit amet.</p>
                <input
                  ref={inputRef}
                  className={s.search}
                  type="search"
                  placeholder="–ü–æ—à—É–∫"
                />
              </div>
            </Col>
          </Row>
        </Container>
        <h2 className={s.h2}>–ü–æ–ø—É–ª—è—Ä–Ω—ñ —Ç–æ–≤–∞—Ä–∏</h2>
        <div className={s.popular_product__section}>
          <Row>
            {products.slice(0, 4).map((id: any) => (
              <Col key={id} lg="3" md="4" className="mb-4">
                <ProductCard product={id} />
              </Col>
            ))}
          </Row>
        </div>
        <div className={s.producer}>
          <div className={s.producer_line}>
            <Link href={Bosch} target="_blank">
              <Image
                src={BoschImg}
                width={221}
                height={49.2}
                alt="producer"
              ></Image>
            </Link>
            <Link href={Franke} target="_blank">
              <Image
                src={FrankeImg}
                width={165.47}
                height={52.01}
                alt="producer"
              ></Image>
            </Link>
            <Link href={Teka} target="_blank">
              <Image
                src={TekaImg}
                width={103.87}
                height={61.43}
                alt="producer"
              ></Image>
            </Link>

            <Link href={Fabino} target="_blank">
              <Image
                src={FabinoImg}
                width={180}
                height={58}
                alt="producer"
              ></Image>
            </Link>
          </div>
        </div>

        <div className={s.history_block}>
          <h4 className={s.h4}>–ù–∞—à–∞ —ñ—Å—Ç–æ—Ä—ñ—è</h4>
          <p className={s.p}>
            Lorem ipsum dolor sit amet consectetur. Nam commodo etiam lectus
            amet proin enim porttitor arcu laoreet. Volutpat posuere eu blandit
            egestas faucibus. Sit lacinia feugiat maecenas tincidunt aliquet.
            Sodales suscipit ac sollicitudin fermentum. Egestas quis sagittis
            augue egestas sit volutpat at diam.
          </p>
          <Link href="/about" className={s.history_btn}>
            –î—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ
          </Link>
        </div>
        <Container className={s.question__section}>
          <Row>
            <Col lg={6} md={4} className={s.retreat}>
              <p className={s.p}>–ß–∞—Å—Ç—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è</p>
              <SimpleAccordion
                AccordionTitle={newAccordionTitle}
                AccordionText={newAccordionText}
              />
              <SimpleAccordion
                AccordionTitle={newAccordionTitle}
                AccordionText={newAccordionText}
              />
              <SimpleAccordion
                AccordionTitle={newAccordionTitle}
                AccordionText={newAccordionText}
              />
              <SimpleAccordion
                AccordionTitle={newAccordionTitle}
                AccordionText={newAccordionText}
              />
            </Col>
            <Col lg="6" md="4">
              <p className={s.p}>–ó–∞–º–æ–≤–∏—Ç–∏ –¥–∑–≤—ñ–Ω–æ–∫</p>
              <div className={s.call__form}>
                <input
                  className={s.call__form_input}
                  type="text"
                  placeholder="–Ü–º‚Äô—è"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                />
                <input
                  className={s.call__form_input}
                  type="text"
                  placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
                  name="phone"
                  value={formData.phone}
                  onChange={handleChange}
                />
                <input
                  className={s.call__form_input}
                  type="text"
                  placeholder="–ö–æ–º–µ–Ω—Ç–∞—Ä"
                  name="comment"
                  value={formData.comment}
                  onChange={handleChange}
                />
                <button className={s.call__form_btn} onClick={notify}>
                  –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–∑–≤—ñ–Ω–æ–∫
                </button>
                <Toaster position="top-right" />
              </div>
            </Col>
          </Row>
        </Container>

        <Container className={s.feedbacks}>
          <Row>
            <Col lg={6} md={4}>
              <p className={s.feedbacks__title}>–í—ñ–¥–≥—É–∫–∏</p>
            </Col>
          </Row>
          <Row>
            <Col lg={3} md={4} className="mb-4">
              <div className={s.feedbacks__card}>
                <p className={s.feedbacks__card_date}>10 –≤–µ—Ä–µ—Å–Ω—è 2023</p>
                <p className={s.feedbacks__card_name}>
                  {currentPage === 1 ? "–ê–Ω–∞—Å—Ç–∞—Å—ñ—è" : "–û–ª–µ–≥"}
                </p>
                <p className={s.feedbacks__card_stars}>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</p>
                <p className={s.feedbacks__card_text}>
                  Lorem ipsum dolor sit amet consectetur. Gravida amet
                  consectetur cras lectus viverra vitae. Enim enim ut quis
                  iaculis viverra augue vel.
                </p>
                <button className={s.feedbacks__card_btn}>
                  –í—ñ–¥–≥—É–∫ –ø–æ–≤–Ω—ñ—Å—Ç—é
                </button>
              </div>
            </Col>

            <Col lg={3} md={4} className="mb-4">
              <div className={s.feedbacks__card}>
                <p className={s.feedbacks__card_date}>10 –≤–µ—Ä–µ—Å–Ω—è 2023</p>
                <p className={s.feedbacks__card_name}>
                  {currentPage === 1 ? "–ê–Ω–∞—Å—Ç–∞—Å—ñ—è" : "–í—ñ—Ç–∞–ª—ñ–∫"}
                </p>
                <p className={s.feedbacks__card_stars}>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</p>
                <p className={s.feedbacks__card_text}>
                  Lorem ipsum dolor sit amet consectetur. Gravida amet
                  consectetur cras lectus viverra vitae. Enim enim ut quis
                  iaculis viverra augue vel.
                </p>
                <button className={s.feedbacks__card_btn}>
                  –í—ñ–¥–≥—É–∫ –ø–æ–≤–Ω—ñ—Å—Ç—é
                </button>
              </div>
            </Col>

            <Col lg={3} md={4} className="mb-4">
              <div className={s.feedbacks__card}>
                <p className={s.feedbacks__card_date}>10 –≤–µ—Ä–µ—Å–Ω—è 2023</p>
                <p className={s.feedbacks__card_name}>
                  {currentPage === 1 ? "–ê–Ω–∞—Å—Ç–∞—Å—ñ—è" : "–ü–µ—Ç—Ä–æ"}
                </p>
                <p className={s.feedbacks__card_stars}>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</p>
                <p className={s.feedbacks__card_text}>
                  Lorem ipsum dolor sit amet consectetur. Gravida amet
                  consectetur cras lectus viverra vitae. Enim enim ut quis
                  iaculis viverra augue vel.
                </p>
                <button className={s.feedbacks__card_btn}>
                  –í—ñ–¥–≥—É–∫ –ø–æ–≤–Ω—ñ—Å—Ç—é
                </button>
              </div>
            </Col>

            <Col lg={3} md={4} className="mb-4">
              <div className={s.feedbacks__card}>
                <p className={s.feedbacks__card_date}>10 –≤–µ—Ä–µ—Å–Ω—è 2023</p>
                <p className={s.feedbacks__card_name}>
                  {currentPage === 1 ? "–ê–Ω–∞—Å—Ç–∞—Å—ñ—è" : "–†–æ–º–∞–Ω"}
                </p>
                <p className={s.feedbacks__card_stars}>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</p>
                <p className={s.feedbacks__card_text}>
                  Lorem ipsum dolor sit amet consectetur. Gravida amet
                  consectetur cras lectus viverra vitae. Enim enim ut quis
                  iaculis viverra augue vel.
                </p>
                <button className={s.feedbacks__card_btn}>
                  –í—ñ–¥–≥—É–∫ –ø–æ–≤–Ω—ñ—Å—Ç—é
                </button>
              </div>
            </Col>
          </Row>
        </Container>
        <Container className={s.pagination}>
          <Pagination
            currentPage={currentPage}
            totalItems={2}
            itemsPerPage={1}
            onPageChange={(page: number) => setCurrentPage(page)}
          />
        </Container>
      </main>
    </>
  );
}
